#测试zip（）并行迭代
for i in [1,2,3]:
    print(i)
names =('g''h''i''j')
ages = (18,19,20,21)
jobs = ('teacher','programmer','politician','doctor')
for name,age,job in zip(names,ages,jobs):
    print('{0}-{1}-{2}'.format(name,age,job))

for i in range(4):
    print("{0}-{1}-{2}".format(names[i],ages[i],jobs[i]))

#列表推导式[表达式 for item in 可迭代对象]or{表达式 for item in 可迭代对象 if 条件判断}
y=[x*2 for x in range(1,5)]
print(y)

y=[x*2 for x in range(1,50) if x%5==0]
print(y)

y=[]
for x in range(1,50):
    if x%5==0:y.append(x*2)
print(y)

cells = [(row,col)for row in range(1,10) for col in range(1,10)]
print(cells)

#字典推导式
my_text = "i love you, i love biology, i love ZJU"
char_count ={ c:my_text.count(c) for c in my_text}
print(char_count)
#作业：使用普通的方式进行上述字符的统计
#集合推导式
b = {x for x in range(1,100) if x%9==0}
print(b)

#生成器推导式（生成元组）
gnt = (x for x in range(4))
print(tuple (gnt))
print(tuple (gnt))

for x in gnt:    #gnt是生成器对象，生成器是可迭代的对象，只能使用一次
    print(x,end=',')
print(tuple(gnt))
import turtle
t = turtle.Pen()

t.circle(100)
t.goto(0,100)
t.circle(200)
#……画出5个同心圆
my_colors = ("red","green","yellow","black")

t.width(3)
t.speed(10)

for i in range(5):    #0    1    2    3    4
    t.penup()
    t.goto(0,-i*10)    #0,  -10,  -20,  -30,  -40
    t.pendown()
    t.color(my_colors[i%len(my_colors)])
    t.circle(15+i*10)    #15  25  35  45  55

turtle.done()    #程序执行完，窗口仍然在
#作业：画一个18*18的棋盘(我的思路，18条横线，18条竖线。）重复
